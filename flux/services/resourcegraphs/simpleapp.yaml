apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata:
  name: simpleapp
spec:
  schema:
    apiVersion: tjololo.k8s.io/v1alpha1
    kind: SimpleApp
    spec:
      # Spec fields that users can provide.
      name: string
      image: string | default="traefik/whoami"
      httproute:
        enabled: boolean | default=false
    status:
      # Fields the controller will inject into instances status.
      deploymentConditions: ${deployment.status.conditions}
      availableReplicas: ${deployment.status.availableReplicas}

  # Define the resources this API will manage.
  resources:
    - id: deployment
      template:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: ${schema.spec.name} # Use the name provided by user
        spec:
          replicas: 3
          selector:
            matchLabels:
              app: ${schema.spec.name}
          template:
            metadata:
              labels:
                app: ${schema.spec.name}
            spec:
              containers:
                - name: ${schema.spec.name}
                  image: ${schema.spec.image} # Use the image provided by user
                  ports:
                    - containerPort: 80

    - id: service
      template:
        apiVersion: v1
        kind: Service
        metadata:
          name: ${schema.spec.name}-service
        spec:
          selector: ${deployment.spec.selector.matchLabels}
          ports:
            - protocol: TCP
              port: 80
              targetPort: 80

    - id: httproute
      includeWhen:
        - ${schema.spec.httproute.enabled}
      template:
        apiVersion: gateway.networking.k8s.io/v1
        kind: HTTPRoute
        metadata:
          name: ${schema.spec.name}-httproute
        spec:
          parentRefs:
            - name: traefik-gateway
              namespace: traefik-system
          hostnames:
            - "whoami.local"
          rules:
            - matches:
              - path:
                  type: PathPrefix
                  value: /
              backendRefs:
                - name: ${service.metadata.name}
                  port: 80